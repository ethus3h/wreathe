'use babel';

Object.defineProperty(exports, '__esModule', {
	value: true
});
var ConsoleView = null;
var ConsoleManager = null;
var CompositeDisposable = null;

exports['default'] = {
	consoleView: null,
	subscriptions: null,

	activate: function activate() {
		var _this = this;

		ConsoleView = require('./console-view');
		ConsoleManager = require('./console-manager');

		var _require = require('atom');

		CompositeDisposable = _require.CompositeDisposable;

		this.consoleView = new ConsoleView();
		this.consoleManager = new ConsoleManager(this.consoleView);

		// Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable
		this.subscriptions = new CompositeDisposable();

		// Register command that toggles this view
		return this.subscriptions.add(atom.commands.add('atom-workspace', {
			'console:toggle': function consoleToggle() {
				return _this.consoleManager.toggle();
			}
		}));
	},

	deactivate: function deactivate() {
		this.subscriptions.dispose();
		return this.consoleView.destroy();
	},

	provideConsolePanel: function provideConsolePanel() {
		return this.consoleManager;
	},

	consumeToolBar: function consumeToolBar(toolBar) {
		this.toolBar = toolBar('console-tool-bar');

		return this.toolBar.addButton({
			icon: 'align-left',
			iconset: 'fi',
			tooltip: 'Toggle Console',
			callback: 'console:toggle',
			priority: 600
		});
	}
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9saWJyYXJ5L0VtYmVyIHNhdGVsbGl0ZSBwcm9qZWN0cy93cmVhdGhlLWJhc2UvdXNyL3NoYXJlL2F0b20vcGFja2FnZXMvY29uc29sZS1wYW5lbC9saWIvY29uc29sZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXLENBQUM7Ozs7O0FBRVosSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLElBQUksY0FBYyxHQUFHLElBQUksQ0FBQztBQUMxQixJQUFJLG1CQUFtQixHQUFHLElBQUksQ0FBQzs7cUJBRWhCO0FBQ2QsWUFBVyxFQUFFLElBQUk7QUFDakIsY0FBYSxFQUFFLElBQUk7O0FBRW5CLFNBQVEsRUFBQSxvQkFBRzs7O0FBQ1YsYUFBVyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3hDLGdCQUFjLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7O2lCQUNuQixPQUFPLENBQUMsTUFBTSxDQUFDOztBQUF2QyxxQkFBbUIsWUFBbkIsbUJBQW1COztBQUV0QixNQUFJLENBQUMsV0FBVyxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7QUFDckMsTUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7OztBQUczRCxNQUFJLENBQUMsYUFBYSxHQUFHLElBQUksbUJBQW1CLEVBQUEsQ0FBQzs7O0FBRzdDLFNBQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFO0FBQ25DLG1CQUFnQixFQUFFO1dBQU0sTUFBSyxjQUFjLENBQUMsTUFBTSxFQUFFO0lBQUE7R0FDcEQsQ0FBQyxDQUNGLENBQUM7RUFDRjs7QUFFRCxXQUFVLEVBQUEsc0JBQUc7QUFDWixNQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzdCLFNBQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztFQUNsQzs7QUFFRCxvQkFBbUIsRUFBQSwrQkFBRztBQUNyQixTQUFPLElBQUksQ0FBQyxjQUFjLENBQUM7RUFDM0I7O0FBRUQsZUFBYyxFQUFBLHdCQUFDLE9BQU8sRUFBRTtBQUN2QixNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDOztBQUUzQyxTQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQzdCLE9BQUksRUFBRSxZQUFZO0FBQ2xCLFVBQU8sRUFBRSxJQUFJO0FBQ2IsVUFBTyxFQUFFLGdCQUFnQjtBQUN6QixXQUFRLEVBQUUsZ0JBQWdCO0FBQzFCLFdBQVEsRUFBRSxHQUFHO0dBQ2IsQ0FBQyxDQUFDO0VBQ0g7Q0FDRCIsImZpbGUiOiIvbGlicmFyeS9FbWJlciBzYXRlbGxpdGUgcHJvamVjdHMvd3JlYXRoZS1iYXNlL3Vzci9zaGFyZS9hdG9tL3BhY2thZ2VzL2NvbnNvbGUtcGFuZWwvbGliL2NvbnNvbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJztcblxubGV0IENvbnNvbGVWaWV3ID0gbnVsbDtcbmxldCBDb25zb2xlTWFuYWdlciA9IG51bGw7XG5sZXQgQ29tcG9zaXRlRGlzcG9zYWJsZSA9IG51bGw7XG5cbmV4cG9ydCBkZWZhdWx0IHtcblx0Y29uc29sZVZpZXc6IG51bGwsXG5cdHN1YnNjcmlwdGlvbnM6IG51bGwsXG5cblx0YWN0aXZhdGUoKSB7XG5cdFx0Q29uc29sZVZpZXcgPSByZXF1aXJlKCcuL2NvbnNvbGUtdmlldycpO1xuXHRcdENvbnNvbGVNYW5hZ2VyID0gcmVxdWlyZSgnLi9jb25zb2xlLW1hbmFnZXInKTtcblx0XHQoeyBDb21wb3NpdGVEaXNwb3NhYmxlIH0gPSByZXF1aXJlKCdhdG9tJykpO1xuXG5cdFx0dGhpcy5jb25zb2xlVmlldyA9IG5ldyBDb25zb2xlVmlldygpO1xuXHRcdHRoaXMuY29uc29sZU1hbmFnZXIgPSBuZXcgQ29uc29sZU1hbmFnZXIodGhpcy5jb25zb2xlVmlldyk7XG5cblx0XHQvLyBFdmVudHMgc3Vic2NyaWJlZCB0byBpbiBhdG9tJ3Mgc3lzdGVtIGNhbiBiZSBlYXNpbHkgY2xlYW5lZCB1cCB3aXRoIGEgQ29tcG9zaXRlRGlzcG9zYWJsZVxuXHRcdHRoaXMuc3Vic2NyaXB0aW9ucyA9IG5ldyBDb21wb3NpdGVEaXNwb3NhYmxlO1xuXG5cdFx0Ly8gUmVnaXN0ZXIgY29tbWFuZCB0aGF0IHRvZ2dsZXMgdGhpcyB2aWV3XG5cdFx0cmV0dXJuIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXG5cdFx0XHRhdG9tLmNvbW1hbmRzLmFkZCgnYXRvbS13b3Jrc3BhY2UnLCB7XG5cdFx0XHRcdCdjb25zb2xlOnRvZ2dsZSc6ICgpID0+IHRoaXMuY29uc29sZU1hbmFnZXIudG9nZ2xlKClcblx0XHRcdH0pXG5cdFx0KTtcblx0fSxcblxuXHRkZWFjdGl2YXRlKCkge1xuXHRcdHRoaXMuc3Vic2NyaXB0aW9ucy5kaXNwb3NlKCk7XG5cdFx0cmV0dXJuIHRoaXMuY29uc29sZVZpZXcuZGVzdHJveSgpO1xuXHR9LFxuXG5cdHByb3ZpZGVDb25zb2xlUGFuZWwoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY29uc29sZU1hbmFnZXI7XG5cdH0sXG5cblx0Y29uc3VtZVRvb2xCYXIodG9vbEJhcikge1xuXHRcdHRoaXMudG9vbEJhciA9IHRvb2xCYXIoJ2NvbnNvbGUtdG9vbC1iYXInKTtcblxuXHRcdHJldHVybiB0aGlzLnRvb2xCYXIuYWRkQnV0dG9uKHtcblx0XHRcdGljb246ICdhbGlnbi1sZWZ0Jyxcblx0XHRcdGljb25zZXQ6ICdmaScsXG5cdFx0XHR0b29sdGlwOiAnVG9nZ2xlIENvbnNvbGUnLFxuXHRcdFx0Y2FsbGJhY2s6ICdjb25zb2xlOnRvZ2dsZScsXG5cdFx0XHRwcmlvcml0eTogNjAwXG5cdFx0fSk7XG5cdH1cbn07XG4iXX0=