#!/usr/bin/env bash
#set -x

((EUID)) && exec sudo -- "$0" "$@"
trap 'printf '\''%b'\'' '\''\033[1;31m'\'' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)." >&2; printf '\''%b'\'' '\''\033[0m'\'' >&2; exit 1' ERR

packageToPackage="$1"

function buildPackages() {
    echo "Downloading DEB for $1..."
    dpkg -i 
    
    path="$(equery w "$1")"
    #PKGDIR=./rpm-output/temp/ emerge --pkg-format "rpm" --buildpkgonly "$1"
    emerge --pkg-format "rpm" --buildpkgonly "$1"
    #ebuild "$path" rpm
    packageName="$(dirname "$path")"
    categoryName="$(dirname "$packageName")"
    packageName="$(basename "$packageName")"
    categoryName="$(basename "$categoryName")"
    ebuildName="$(basename "$path")"
    ebuildName="${ebuildName%.ebuild}"
    #rpmPath=/var/tmp/portage/"$categoryName"/"$ebuildName"/temp/rpmbuild/RPMS/x86_64/
    #rpmPath=./rpm-output/temp/"$categoryName"/
    rpmPath=/usr/portage/rpm/"$categoryName"/
    #rpmFile="$(find "$rpmPath" -type f -print -and -quit)"
    rpmFile="$(find "$rpmPath" -name "$ebuildName"'*' -type f -print -and -quit)"
    rpmName="$(basename "$rpmFile")"
    cp "$rpmFile" ./rpm-output/
    echo "Making DEB for $1..."
    cp ./rpm-output/"$rpmName" ./deb-output/
    (
        cd ./deb-output/
        alien --to-deb "./$rpmName"
        rm "./$rpmName"
    )
}

# shellcheck disable=SC1091
source ./targets &> /dev/null

(
    cd /home/kyan/
    mkdir -p ./ember-wreathe-packages/rpm-output/temp
    mkdir -p ./ember-wreathe-packages/deb-output
    (
        cd ember-wreathe-packages
        if [[ -z "$packageToPackage" ]]; then
            for (( i=0; i<targetCount; i++ )); do
                buildPackages "${targets[$i]}"
            done
        else
            buildPackages "$packageToPackage"
        fi
    )
    chown -R kyan:kyan ./ember-wreathe-packages/rpm-output
    chown -R kyan:kyan ./ember-wreathe-packages/deb-output
)
