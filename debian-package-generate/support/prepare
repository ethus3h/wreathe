#!/usr/bin/env bash
# shellcheck disable=SC1091
source ember_bash_setup &> /dev/null || { printf '%b' '\033[1;31m' >&2; echo "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd): The required dependency ember-shared could not be found (or ember_bash_setup could not be sourced for some other reason)." >&2; printf '%b' '\033[0m' >&2; exit 1; }
#set -x

trap 'die "A fatal error was reported on ${BASH_SOURCE[0]} line ${LINENO} in $(pwd)."' ERR

source support/getDirs

if [[ -z "$(ember-getconf emberSharedVersion)" ]]; then
    #NOTE: MAINTENANCE: Manual error printing
    if [[ -z "$(ember-getconf emberSharedVersion)" ]]; then
        printf '%b' '\033[1;31m' >&2
        echo "ERROR: ember-shared is not properly installed! It must be installed before installing $packageName." >&2
        printf '%b' '\033[0m' >&2
        exit 1
    fi
fi

if [[ "$OSTYPE" = darwin* ]]; then
    if [[ -f "support/prepareForMac" ]]; then
        support/prepareForMac "$packageName"
    fi
fi

substitutePath() {
    defaultPath="${1//\//\\\/}"
    newPathVarName="$2"
    export "${newPathVarName?}"
    local pathEsc
    pathEsc="$(perl -0777 -e 'print(quotemeta($ENV{'"$newPathVarName"'}))')"
    echo "pathEsc for $newPathVarName: $pathEsc"
    find scripts -maxdepth 1 -type f -exec perl -0777 -p -i -e "s/$defaultPath/$pathEsc/g" {} \;
}

if [[ -e scripts ]]; then
    substitutePath "/usr/local/bin" "emberBindir"

    substitutePath "/usr/local/etc" "emberSysconfdir"

    substitutePath "/usr/local/share" "emberDatadir"
fi

if [[ -e docs ]]; then
    if ! [[ -d docs ]]; then
        warn "\"docs\" exists, but is not a directory. Documentation will not be installed."
    elif ! [[ -f 'docs/.futuramerlin-web-toolkit/.futuramerlin-web-toolkit.cfg' ]]; then
        echo "(The package doesn't contain a docs/.futuramerlin-web-toolkit/.futuramerlin-web-toolkit.cfg file, so the documentation will be installed as normal files.)" 1>&2
    else
        if ! fmwtk_loc="$(type -P "futuramerlin-web-toolkit-build")" || [[ -z $fmwtk_loc ]]; then
            warn "Not building documentation: futuramerlin-web-toolkit not found."
        else
            pushd "docs" || die
            futuramerlin-web-toolkit-build
            popd || die
        fi
    fi
fi

#### End of preparation install script template ####

# Any extra installation prep logic (compilation, etc.) goes here.
