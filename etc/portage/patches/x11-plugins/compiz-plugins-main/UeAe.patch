diff --git a/metadata/neg.xml.in b/metadata/neg.xml.in
index eaed8e4..3be379b 100644
--- a/metadata/neg.xml.in
+++ b/metadata/neg.xml.in
@@ -22,15 +22,15 @@
 			</option>
 		</display>
 		<screen>
+			<option name="toggle_by_default" type="bool">
+				<_short>Auto-Toggle Matched Windows</_short>
+				<_long>Automatically toggle windows in the match list by default</_long>
+				<default>false</default>
+			</option>
 			<option name="neg_match" type="match">
 				<_short>Negative Windows</_short>
-				<_long>Windows to be negative by default</_long>
-				<default>any</default>
-			</option>
-			<option name="exclude_match" type="match">
-				<_short>Exclude Windows</_short>
-				<_long>Windows to exclude from negating</_long>
-				<default>type=Desktop</default>
+				<_long>Windows to affect when negating</_long>
+				<default>any &amp; !(type=Desktop)</default>
 			</option>
 		</screen>
 	</plugin>
diff --git a/src/neg/neg.c b/src/neg/neg.c
index 6b53b1a..b86f0b1 100644
--- a/src/neg/neg.c
+++ b/src/neg/neg.c
@@ -82,12 +82,9 @@ NEGToggle (CompWindow *w)
 {
     NEG_WINDOW (w);
 
-    /* toggle window negative flag */
-    nw->isNeg = !nw->isNeg;
-
-    /* check exclude list */
-    if (matchEval (negGetExcludeMatch (w->screen), w))
-	nw->isNeg = FALSE;
+    /* check include list */
+    if (matchEval (negGetNegMatch (w->screen), w))
+		nw->isNeg = !nw->isNeg;
 
     /* cause repainting */
     addWindowDamage (w);
@@ -549,10 +546,20 @@ static void
 NEGWindowAdd (CompScreen *s,
 	      CompWindow *w)
 {
-    /* nw->isNeg is initialized to FALSE in InitWindow, so we only
-       have to toggle it to TRUE if necessary */
-    if (matchEval (negGetNegMatch (s), w))
-	NEGToggle (w);
+	NEG_SCREEN (s);
+
+	/* nw->isNeg is initialized to FALSE in InitWindow, so we only
+	have to toggle it to TRUE if necessary */
+	if (negGetToggleByDefault (s))
+	{
+		if (matchEval (negGetNegMatch (s), w))
+			NEGToggle (w);
+	}
+	else
+	{
+		if (ns->isNeg && matchEval (negGetNegMatch (s), w))
+			NEGToggle (w);
+	}
 }
 
 static void
@@ -562,8 +569,32 @@ NEGScreenOptionChanged (CompScreen       *s,
 {
     switch (num)
     {
+    case NegScreenOptionToggleByDefault:
+    {
+		CompWindow *w;
+		Bool enabled = opt[NegScreenOptionToggleByDefault].value.b;
+
+		NEG_SCREEN (s);
+
+		for (w = s->windows; w; w = w->next)
+		{
+			NEG_WINDOW (w);
+			if (enabled)
+			{
+				if (!nw->isNeg)
+					NEGToggle (w);
+			}
+			else
+			{
+				if (nw->isNeg && !ns->isNeg)
+					NEGToggle (w);
+			}
+		}
+		if (enabled)
+			ns->isNeg = !ns->isNeg;
+	}
+    break;
     case NegScreenOptionNegMatch:
-    case NegScreenOptionExcludeMatch:
 	{
 	    CompWindow *w;
 	    NEG_SCREEN (s);
@@ -574,7 +605,6 @@ NEGScreenOptionChanged (CompScreen       *s,
 		NEG_WINDOW (w);
 
 		isNeg = matchEval (negGetNegMatch (s), w);
-		isNeg = isNeg && !matchEval (negGetExcludeMatch (s), w);
 
 		if (isNeg && ns->isNeg && !nw->isNeg)
 		    NEGToggle (w);
@@ -711,8 +741,8 @@ NEGInitScreen (CompPlugin *p,
     ns->negFunction      = 0;
     ns->negAlphaFunction = 0;
 
+    negSetToggleByDefaultNotify (s, NEGScreenOptionChanged);
     negSetNegMatchNotify (s, NEGScreenOptionChanged);
-    negSetExcludeMatchNotify (s, NEGScreenOptionChanged);
 
     /* wrap overloaded functions */
     WRAP (ns, s, drawWindowTexture, NEGDrawWindowTexture);

