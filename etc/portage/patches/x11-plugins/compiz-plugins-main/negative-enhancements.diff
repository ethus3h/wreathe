diff --git a/metadata/neg.xml.in b/metadata/neg.xml.in
index fa7e9ed..224de1f 100644
--- a/metadata/neg.xml.in
+++ b/metadata/neg.xml.in
@@ -17,20 +17,40 @@
 			</option>
 			<option name="screen_toggle_key" type="key">
 				<_short>Toggle Screen Negative</_short>
-				<_long>Toggle screen negative</_long>
+				<_long>Toggle all windows negative, except for windows in the &quot;Screen Exclusions&quot; list</_long>
 				<default>&lt;Super&gt;m</default>
 			</option>
+			<option name="matched_toggle_key" type="key">
+				<_short>Toggle Matched Windows Negative</_short>
+				<_long>Toggles the windows negative matched by the &quot;Negative Windows&quot; list</_long>
+				<default></default>
+			</option>
 		</display>
 		<screen>
-			<option name="toggle_by_default" type="bool">
+			<option name="toggle_match_by_default" type="bool">
 				<_short>Auto-Toggle Matched Windows</_short>
-				<_long>Automatically toggle windows in the match list by default</_long>
-				<default>false</default>
+				<_long>Automatically toggle windows in the &quot;Matched Windows&quot; list by default</_long>
+				<default>true</default>
 			</option>
 			<option name="neg_match" type="match">
-				<_short>Negative Windows</_short>
-				<_long>Windows to affect when negating</_long>
-				<default>!(type=Desktop)</default>
+				<_short>Matched Windows</_short>
+				<_long>Windows to affect when negating only matched windows</_long>
+				<default></default>
+			</option>
+			<option name="toggle_by_default" type="bool">
+				<_short>Auto-Toggle Screen</_short>
+				<_long>Automatically toggle all windows by default, except for those in the &quot;Screen Exclusions&quot; list</_long>
+				<default>false</default>
+			</option>
+			<option name="exclude_match" type="match">
+				<_short>Screen Exclusions</_short>
+				<_long>Windows to exclude when toggling the screen.</_long>
+				<default>type=Desktop || type=Dock</default>
+			</option>
+			<option name="preserve_toggled" type="bool">
+				<_short>Preserve Toggled Windows</_short>
+				<_long>When windows have been toggled by themselves or as part of the &quot;Matched Windows&quot; list, preserve their state when toggling the screen</_long>
+				<default>false</default>
 			</option>
 		</screen>
 	</plugin>
diff --git a/src/neg/neg.c b/src/neg/neg.c
index 1ed10c0..8f25c6c 100644
--- a/src/neg/neg.c
+++ b/src/neg/neg.c
@@ -47,6 +47,7 @@ typedef struct _NEGScreen
     DrawWindowTextureProc drawWindowTexture;
 
     Bool isNeg; /* negative screen flag */
+    Bool matchNeg; /* match group is toggled */
 
     int negFunction;
     int negAlphaFunction;
@@ -55,7 +56,7 @@ typedef struct _NEGScreen
 typedef struct _NEGWindow
 {
     Bool isNeg; /* negative window flag */
-    Bool matched;
+    Bool key_toggled; /* window has been individually toggled */
 } NEGWindow;
 
 #define GET_NEG_CORE(c) \
@@ -81,34 +82,78 @@ typedef struct _NEGWindow
 static void
 NEGUpdateState (CompWindow *w)
 {
+    NEG_SCREEN (w->screen);
     NEG_WINDOW (w);
 
-    /* check include list */
-    if (matchEval (negGetNegMatch (w->screen), w))
-		nw->isNeg = !nw->isNeg;
-	else
-		nw->isNeg = FALSE;
+    Bool windowState;
+
+    /* Decide whether the given window should be negative or not, depending on
+       the various parameters that can affect this, and set windowState thus */
+
+    if ( ( ! matchEval (negGetExcludeMatch (w->screen), w) ) && ns->isNeg)
+	windowState = TRUE;
+    else
+	windowState = FALSE;
+
+    if (matchEval (negGetNegMatch (w->screen), w) && ns->matchNeg)
+	windowState = !windowState;
+
+    if ( ( ! negGetPreserveToggled (w->screen) ) && nw->key_toggled)
+	windowState = !windowState;
+
+    /* Now that we know what this window's state should be, push the value to
+       its nw->isNeg. */
+    nw->isNeg = windowState;
 
     /* cause repainting */
     addWindowDamage (w);
 }
 
 static void
-NEGToggleScreen (CompScreen *s)
+NEGToggleWindow (CompWindow *w)
 {
-    CompWindow *w;
+    NEG_WINDOW (w);
 
-    NEG_SCREEN(s);
+    nw->isNeg = TRUE;
+    nw->key_toggled = !nw->key_toggled;
 
-    /* toggle screen negative flag */
-    ns->isNeg = !ns->isNeg;
+    /* cause repainting */
+    NEGUpdateState (w);
+}
+
+static void
+NEGUpdateScreen (CompScreen *s)
+{
+    CompWindow *w;
 
-    /* toggle every window */
+    /* update every window */
     for (w = s->windows; w; w = w->next)
 	if (w)
 	    NEGUpdateState (w);
 }
 
+static void
+NEGToggleScreen (CompScreen *s)
+{
+    NEG_SCREEN (s);
+
+    /* toggle screen negative flag */
+    ns->isNeg = !ns->isNeg;
+
+    NEGUpdateScreen (s);
+}
+
+static void
+NEGToggleMatches (CompScreen *s)
+{
+    NEG_SCREEN (s);
+
+    /* toggle match negative flag */
+    ns->matchNeg = !ns->matchNeg;
+
+    NEGUpdateScreen (s);
+}
+
 static Bool
 negToggle (CompDisplay     *d,
 	   CompAction      *action,
@@ -123,7 +168,7 @@ negToggle (CompDisplay     *d,
     w = findWindowAtDisplay (d, xid);
 
     if (w)
-	NEGUpdateState (w);
+	NEGToggleWindow (w);
 
     return TRUE;
 }
@@ -147,6 +192,25 @@ negToggleAll (CompDisplay     *d,
     return TRUE;
 }
 
+static Bool
+negToggleMatched (CompDisplay     *d,
+	      CompAction      *action,
+	      CompActionState state,
+	      CompOption      *option,
+	      int             nOption)
+{
+    CompScreen *s;
+    Window     xid;
+
+    xid = getIntOptionNamed (option, nOption, "root", 0);
+    s = findScreenAtDisplay (d, xid);
+
+    if (s)
+	NEGToggleMatches (s);
+
+    return TRUE;
+}
+
 static int
 getNegFragmentFunction (CompScreen  *s,
 			CompTexture *texture,
@@ -549,15 +613,8 @@ static void
 NEGWindowAdd (CompScreen *s,
 	      CompWindow *w)
 {
-	NEG_SCREEN (s);
-	NEG_WINDOW (w);
-
-	nw->matched = matchEval (negGetNegMatch (s), w);
-
-	/* nw->isNeg is initialized to FALSE in InitWindow, so we only
-	have to toggle it to TRUE if necessary */
-	if (ns->isNeg && nw->matched)
-		NEGUpdateState (w);
+	/* Run matching logic on the new window */
+	NEGUpdateState (w);
 }
 
 static void
@@ -567,49 +624,37 @@ NEGScreenOptionChanged (CompScreen       *s,
 {
     switch (num)
     {
-    case NegScreenOptionToggleByDefault:
-    {
-		CompWindow *w;
-
-		NEG_SCREEN (s);
+    case NegScreenOptionToggleMatchByDefault:
+	{
+	    NEG_SCREEN (s);
 
-		ns->isNeg = opt[NegScreenOptionToggleByDefault].value.b;
+	    ns->matchNeg = opt[NegScreenOptionToggleMatchByDefault].value.b;
 
-		for (w = s->windows; w; w = w->next)
-		{
-			NEG_WINDOW (w);
-			if (ns->isNeg)
-			{
-				if (!nw->isNeg)
-					NEGUpdateState (w);
-			}
-			else
-			{
-				if (nw->isNeg)
-					NEGUpdateState (w);
-			}
-		}
+	    NEGUpdateScreen (s);
 	}
-    break;
+	break;
     case NegScreenOptionNegMatch:
 	{
-	    CompWindow *w;
+	    NEGUpdateScreen (s);
+	}
+	break;
+    case NegScreenOptionToggleByDefault:
+	{
 	    NEG_SCREEN (s);
 
-	    for (w = s->windows; w; w = w->next)
-	    {
-			NEG_WINDOW (w);
-
-			nw->matched = matchEval (negGetNegMatch (w->screen), w);
+	    ns->isNeg = opt[NegScreenOptionToggleByDefault].value.b;
 
-			if (nw->matched)
-			{
-				if ((ns->isNeg || negGetToggleByDefault (s)) && !nw->isNeg)
-					NEGUpdateState (w);
-			}
-			else if (nw->isNeg)
-				NEGUpdateState (w);
-	    }
+	    NEGUpdateScreen (s);
+	}
+	break;
+    case NegScreenOptionExcludeMatch:
+	{
+	    NEGUpdateScreen (s);
+	}
+	break;
+    case NegScreenOptionPreserveToggled:
+	{
+	    NEGUpdateScreen (s);
 	}
 	break;
     default:
@@ -696,6 +741,7 @@ NEGInitDisplay (CompPlugin  *p,
 
     negSetWindowToggleKeyInitiate (d, negToggle);
     negSetScreenToggleKeyInitiate (d, negToggleAll);
+    negSetMatchedToggleKeyInitiate (d, negToggleMatched);
 
     d->base.privates[displayPrivateIndex].ptr = nd;
 
@@ -735,13 +781,17 @@ NEGInitScreen (CompPlugin *p,
     /* initialize the screen variables
      * you know what happens if you don't
      */
-    ns->isNeg = FALSE;
+    ns->isNeg    = FALSE;
+    ns->matchNeg = FALSE;
 
     ns->negFunction      = 0;
     ns->negAlphaFunction = 0;
 
-    negSetToggleByDefaultNotify (s, NEGScreenOptionChanged);
+    negSetToggleMatchByDefaultNotify (s, NEGScreenOptionChanged);
     negSetNegMatchNotify (s, NEGScreenOptionChanged);
+    negSetToggleByDefaultNotify (s, NEGScreenOptionChanged);
+    negSetExcludeMatchNotify (s, NEGScreenOptionChanged);
+    negSetPreserveToggledNotify (s, NEGScreenOptionChanged);
 
     /* wrap overloaded functions */
     WRAP (ns, s, drawWindowTexture, NEGDrawWindowTexture);
@@ -782,7 +832,7 @@ NEGInitWindow (CompPlugin *p,
 	return FALSE;
 
     nw->isNeg       = FALSE;
-    nw->matched     = FALSE;
+    nw->key_toggled = FALSE;
 
     w->base.privates[ns->windowPrivateIndex].ptr = nw;
 
@@ -858,4 +908,3 @@ getCompPluginInfo(void)
 {
     return &NEGVTable;
 }
-
