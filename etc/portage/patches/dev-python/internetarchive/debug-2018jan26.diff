diff --git a/internetarchive/cli/ia_upload.py b/internetarchive/cli/ia_upload.py
index 403dc21..a930561 100644
--- a/internetarchive/cli/ia_upload.py
+++ b/internetarchive/cli/ia_upload.py
@@ -72,6 +72,7 @@ from internetarchive.utils import validate_ia_identifier, get_s3_xml_text
 
 def _upload_files(item, files, upload_kwargs, prev_identifier=None, archive_session=None):
     """Helper function for calling :meth:`Item.upload`"""
+    print('Entered CLI _upload_files')
     responses = []
     if (upload_kwargs['verbose']) and (prev_identifier != item.identifier):
         print('{0}:'.format(item.identifier))
@@ -110,6 +111,7 @@ def _upload_files(item, files, upload_kwargs, prev_identifier=None, archive_sess
 
 
 def main(argv, session):
+    print('Entered CLI main')
     if six.PY2:
         args = docopt(__doc__.encode('utf-8'), argv=argv)
     else:
diff --git a/internetarchive/item.py b/internetarchive/item.py
index d189f0d..e7ca9ac 100644
--- a/internetarchive/item.py
+++ b/internetarchive/item.py
@@ -555,6 +555,7 @@ class Item(BaseItem):
             ...                  key='photos/image1.jpg')
             True
         """
+        print('Entered Item.upload_file')
         # Set defaults.
         headers = {} if headers is None else headers
         metadata = {} if metadata is None else metadata
@@ -583,8 +584,12 @@ class Item(BaseItem):
             else:
                 filename = body.name
 
+        print ('Got name')
+
         size = get_file_size(body)
 
+        print ('Got size')
+
         # Support for uploading empty files.
         if size == 0:
             headers['Content-Length'] = '0'
@@ -598,6 +603,8 @@ class Item(BaseItem):
         url = '{0}/{1}'.format(
             base_url, urllib.parse.quote(norm_filepath(key).lstrip('/').encode('utf-8')))
 
+        print ('Got URL')
+
         # Skip based on checksum.
         if checksum:
             md5_sum = get_md5(body)
@@ -620,14 +627,20 @@ class Item(BaseItem):
                 body.close()
                 return Response()
 
+        print ('checksum passed: target already exists')
+
         # require the Content-MD5 header when delete is True.
         if verify or delete:
             if not md5_sum:
                 md5_sum = get_md5(body)
             headers['Content-MD5'] = md5_sum
 
+        print ('Declaring _build_request')
+
         def _build_request():
+            print ('Entered _build_request')
             body.seek(0, os.SEEK_SET)
+            print ('Did body.seek')
             if verbose:
                 try:
                     # hack to raise exception so we get some output for
@@ -648,8 +661,10 @@ class Item(BaseItem):
                     data = body
             else:
                 data = body
+            print ('Got data')
 
             headers.update(self.session.headers)
+            print ('Headers updated')
             request = S3Request(method='PUT',
                                 url=url,
                                 headers=headers,
@@ -658,6 +673,7 @@ class Item(BaseItem):
                                 access_key=access_key,
                                 secret_key=secret_key,
                                 queue_derive=queue_derive)
+            print ('Ready to return')
             return request
 
         if debug:
@@ -758,6 +774,7 @@ class Item(BaseItem):
         :rtype: list
         :returns: A list of requests.Response objects.
         """
+        print('Entered Item.upload')
         queue_derive = True if queue_derive is None else queue_derive
         remote_dir_name = None
         if isinstance(files, dict):
