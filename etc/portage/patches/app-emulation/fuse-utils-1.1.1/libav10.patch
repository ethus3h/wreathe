Index: fuse-emulator-utils-1.1.1/fmfconv_ff.c
===================================================================
--- fuse-emulator-utils-1.1.1.orig/fmfconv_ff.c	2013-05-16 20:32:13.000000000 +0000
+++ fuse-emulator-utils-1.1.1/fmfconv_ff.c	2014-03-06 08:49:05.542084378 +0000
@@ -60,6 +60,8 @@
 
 #include <libavformat/avformat.h>
 #include <libavutil/mathematics.h>
+#include <libavutil/opt.h>
+#include <libavresample/avresample.h>
 #include <libswscale/swscale.h>
 
 #include "libspectrum.h"
@@ -94,9 +96,10 @@
 static int audio_inpbuf_len;			/* actual number of audio frames */
 
 static AVFrame *ff_picture, *ff_tmp_picture, *ffmpeg_pict;
+static AVFrame *audio_frame;
 static struct SwsContext *video_resize_ctx;
 
-static ReSampleContext *audio_resample_ctx;
+static AVAudioResampleContext *audio_resample_ctx;
 static int16_t **ffmpeg_sound;
 
 static uint8_t *video_outbuf;
@@ -130,11 +133,10 @@
 int
 ffmpeg_resample_audio( void )
 {
-  int len;
+  int len, ret;
 
   if( audio_resample_ctx && res_rte != snd_rte ) {
-    audio_resample_close( audio_resample_ctx );
-    audio_resample_ctx = NULL;
+    avresample_free( &audio_resample_ctx );
     av_free( audio_tmp_inpbuf );
     ffmpeg_sound = &sound16;
     printi( 2, "ffmpeg_resample_audio(): reinit resample %dHz -> %dHz\n", snd_rte, out_rte );
@@ -145,11 +147,20 @@
     out_fsz = 2 * out_chn;
   }
   if( !audio_resample_ctx ) {
-    audio_resample_ctx = av_audio_resample_init( out_chn, snd_chn,
-						 out_rte, snd_rte,
-						 AV_SAMPLE_FMT_S16,
-                                                 AV_SAMPLE_FMT_S16,
-						 16, 8, 1, 1.0 );
+    audio_resample_ctx = avresample_alloc_context();
+    av_opt_set_int(audio_resample_ctx, "in_channel_layout",  av_get_default_channel_layout(snd_chn), 0);
+    av_opt_set_int(audio_resample_ctx, "out_channel_layout", av_get_default_channel_layout(out_chn), 0);
+    av_opt_set_int(audio_resample_ctx, "in_sample_fmt",      AV_SAMPLE_FMT_S16,			     0);
+    av_opt_set_int(audio_resample_ctx, "out_sample_fmt",     AV_SAMPLE_FMT_S16,		             0);
+    av_opt_set_int(audio_resample_ctx, "in_sample_rate",     snd_rte,		                     0);
+    av_opt_set_int(audio_resample_ctx, "out_sample_rate",    out_rte,		                     0);
+
+    ret = avresample_open(audio_resample_ctx);
+    if (ret < 0) {
+        printe( "Error opening the resample context\n");
+        return 1;
+    }
+
     audio_tmp_inpbuf_size = (float)audio_outbuf_size * out_rte / snd_rte * (float)out_chn / snd_chn + 1.0;
     audio_tmp_inpbuf = av_malloc( audio_tmp_inpbuf_size );
     ffmpeg_sound = (void *)(&audio_tmp_inpbuf);
@@ -160,9 +171,9 @@
     return 1;
   }
 
-  len = audio_resample( audio_resample_ctx,
-                  (short *)audio_tmp_inpbuf, (short *)sound16,
-                  snd_len / snd_fsz );
+  len = avresample_convert( audio_resample_ctx,
+                  (uint8_t**)&audio_tmp_inpbuf, audio_tmp_inpbuf_size, audio_tmp_inpbuf_size / out_fsz,
+		  (uint8_t**)&sound16, snd_len, snd_len / snd_fsz );
   if( !len ) {
     printe( "FFMPEG: Error during audio resampling\n" );
     return 1;
@@ -224,7 +235,7 @@
  */
 
 static int
-add_audio_stream( enum CodecID codec_id, int freq, int stereo )
+add_audio_stream( enum AVCodecID codec_id, int freq, int stereo )
 {
   AVCodecContext *c;
 
@@ -295,6 +306,8 @@
 #endif
   audio_input_frames = c->frame_size;
 
+  audio_frame = av_frame_alloc();
+
   if( audio_input_frames <= 1 ) {
     audio_outbuf_size = out_rte * 1250 * audio_oframe_size / out_fps;
   } else {
@@ -336,20 +349,25 @@
   if( audio_input_frames > 1 ) {
      while( audio_inpbuf_len + len >= audio_input_frames ) {
       int copy_len = ( audio_input_frames - audio_inpbuf_len ) * audio_iframe_size;
-      AVPacket pkt;
-      av_init_packet( &pkt );
+      AVPacket pkt = { 0 };
+      int ret, got_output;
 
       memcpy( (char *)audio_inpbuf + ( audio_inpbuf_len * audio_iframe_size ), buf, copy_len );
       len -= audio_input_frames - audio_inpbuf_len;
       buf = (void *)( (char *)buf + copy_len );
 
-      pkt.size = avcodec_encode_audio( c, audio_outbuf, audio_outbuf_size, audio_inpbuf );
+      audio_frame->data[0] = audio_inpbuf;
+      audio_frame->linesize[0] = c->frame_size * audio_iframe_size;
+      audio_frame->nb_samples = c->frame_size;
+
+      ret = avcodec_encode_audio2( c, &pkt, audio_frame, &got_output);
+
+      if (!got_output)
+          continue;
 
       if( c->coded_frame && c->coded_frame->pts != AV_NOPTS_VALUE )
 	pkt.pts= av_rescale_q( c->coded_frame->pts, c->time_base, audio_st->time_base );
-      pkt.flags |= AV_PKT_FLAG_KEY;
       pkt.stream_index = audio_st->index;
-      pkt.data = audio_outbuf;
 
     /* write the compressed frame in the media file */
       if( av_interleaved_write_frame( oc, &pkt ) != 0 ) {
@@ -365,21 +383,25 @@
 
 
   } else {			/* with PCM output */
-    AVPacket pkt;
-    av_init_packet( &pkt );
-
-    pkt.size = avcodec_encode_audio( c, audio_outbuf, coded_bps ? len * out_chn * coded_bps / 8 : len * out_chn, buf );
-
-    if( c->coded_frame && c->coded_frame->pts != AV_NOPTS_VALUE )
-      pkt.pts= av_rescale_q( c->coded_frame->pts, c->time_base, audio_st->time_base );
-    pkt.flags |= AV_PKT_FLAG_KEY;
-    pkt.stream_index = audio_st->index;
-    pkt.data = audio_outbuf;
+    AVPacket pkt = { 0 };
+    int ret, got_output;
 
-    /* write */
-    if( av_interleaved_write_frame( oc, &pkt ) != 0 ) {
-      fprintf( stderr, "Error while writing audio frame\n" );
-/*      exit( 1 ); */
+    audio_frame->data[0] = buf;
+    audio_frame->linesize[0] = c->frame_size * audio_iframe_size;
+    audio_frame->nb_samples = c->frame_size;
+
+    ret = avcodec_encode_audio2( c, &pkt, audio_frame, &got_output);
+
+    if (got_output) {
+        if( c->coded_frame && c->coded_frame->pts != AV_NOPTS_VALUE )
+          pkt.pts= av_rescale_q( c->coded_frame->pts, c->time_base, audio_st->time_base );
+        pkt.stream_index = audio_st->index;
+
+        /* write */
+        if( av_interleaved_write_frame( oc, &pkt ) != 0 ) {
+          fprintf( stderr, "Error while writing audio frame\n" );
+    /*      exit( 1 ); */
+        }
     }
     printi( 3, "ffmpeg_add_sound_ffmpeg(): write sound packet %d samples pkt.size = %dbyte\n", len, pkt.size );
   }
@@ -419,6 +441,7 @@
 {
   if( audio_st ) avcodec_close( audio_st->codec );
   if( audio_outbuf ) av_free( audio_outbuf );
+  av_frame_free(&audio_frame);
 }
 
 /**************************************************************/
@@ -440,7 +463,7 @@
 
 /* add a video output stream */
 static int
-add_video_stream( enum CodecID codec_id, int w, int h, int timing )
+add_video_stream( enum AVCodecID codec_id, int w, int h, int timing )
 {
   AVCodecContext *c;
 
@@ -599,7 +622,7 @@
 void
 ffmpeg_add_frame_ffmpeg( void )
 {
-  int out_size, ret;
+  int got_output, ret;
   AVCodecContext *c;
 
   if( !video_st ) return;
@@ -619,22 +642,17 @@
 
     ret = av_interleaved_write_frame( oc, &pkt );
   } else {
+    AVPacket pkt = { 0 };
+
     ffmpeg_pict->pts = c->frame_number;
 
         /* encode the image */
-    out_size = avcodec_encode_video( c, video_outbuf, video_outbuf_size, ffmpeg_pict );
-        /* if zero size, it means the image was buffered */
-    if( out_size > 0 ) {
-      AVPacket pkt;
-      av_init_packet( &pkt );
-
-      if( c->coded_frame->pts != AV_NOPTS_VALUE )
-        pkt.pts = av_rescale_q( c->coded_frame->pts, c->time_base, video_st->time_base );
-      if( c->coded_frame->key_frame )
-        pkt.flags |= AV_PKT_FLAG_KEY;
+    ret = avcodec_encode_video2(c, &pkt, ffmpeg_pict, &got_output);
+    if( ret >= 0 && got_output) {
+      pkt.pts = av_rescale_q( pkt.pts, c->time_base, video_st->time_base );
+      pkt.dts = av_rescale_q( pkt.dts, c->time_base, video_st->time_base );
+
       pkt.stream_index= video_st->index;
-      pkt.data = video_outbuf;
-      pkt.size = out_size;
 
             /* write the compressed frame in the media file */
       ret = av_interleaved_write_frame( oc, &pkt );
@@ -674,7 +692,7 @@
 {
 
   AVCodec *ac, *vc;
-  enum CodecID acodec, vcodec;
+  enum AVCodecID acodec, vcodec;
 
   ff_picture = NULL;
   ff_tmp_picture = NULL;
@@ -725,7 +743,7 @@
   vcodec = fmt->video_codec;
   acodec = fmt->audio_codec;
 
-  if( out_t == TYPE_FFMPEG && vcodec != CODEC_ID_NONE ) {
+  if( out_t == TYPE_FFMPEG && vcodec != AV_CODEC_ID_NONE ) {
 
     /* Find the video encoder requested by user selection */
     if( ffmpeg_vcodec != NULL && *ffmpeg_vcodec != 0 ) {
@@ -758,7 +776,7 @@
       return 1;
   }
 
-  if( snd_t == TYPE_FFMPEG && acodec != CODEC_ID_NONE ) {
+  if( snd_t == TYPE_FFMPEG && acodec != AV_CODEC_ID_NONE ) {
 
     /* Find the audio encoder requested by user selection */
     if( ffmpeg_acodec != NULL && *ffmpeg_acodec != 0 ) {
Index: fuse-emulator-utils-1.1.1/configure.ac
===================================================================
--- fuse-emulator-utils-1.1.1.orig/configure.ac	2014-02-28 22:25:30.524185980 +0000
+++ fuse-emulator-utils-1.1.1/configure.ac	2014-02-28 22:25:59.813904078 +0000
@@ -85,8 +85,8 @@
 AC_MSG_RESULT($ffmpeglib)
 if test "$ffmpeglib" = yes; then
   AC_CHECK_HEADERS(
-    libavformat/avformat.h libswscale/swscale.h,
-    FFMPEG_LIBS="-lavformat -lavcodec -lswscale -lavutil",
+    libavformat/avformat.h libswscale/swscale.h libavresample/avresample.h,
+    FFMPEG_LIBS="-lavformat -lavcodec -lswscale -lavresample -lavutil",
     FFMPEG_LIBS=''; break
   )
   if test "x$FFMPEG_LIBS" != "x"
