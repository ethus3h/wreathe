diff --git a/kfilereplacepart.cpp b/kfilereplacepart.cpp
index e82f6b7..93f8a06 100644
--- a/kfilereplacepart.cpp
+++ b/kfilereplacepart.cpp
@@ -686,6 +686,7 @@ void KFileReplacePart::initGUI()
     actionCollection()->addAction("report_bug", action );
   connect(action, SIGNAL(triggered(bool) ), SLOT(reportBug()));
 
+  m_option->m_simulation = false;
 }
 
 void KFileReplacePart::initView()
diff --git a/kfilereplaceview.cpp b/kfilereplaceview.cpp
index 303ec4a..5ace4ad 100644
--- a/kfilereplaceview.cpp
+++ b/kfilereplaceview.cpp
@@ -349,7 +349,6 @@ void KFileReplaceView::slotQuickStringsAdd(const QString& quickSearch, const QSt
     if(quickReplace.isEmpty())
     {
       map[quickSearch] = QString::null;	//krazy:exclude=nullstrassign for old broken gcc
-      m_option->m_searchingOnlyMode = true;
     }
     else
     {
diff --git a/knewprojectdlg.cpp b/knewprojectdlg.cpp
index 5f1a92d..4ac22bf 100644
--- a/knewprojectdlg.cpp
+++ b/knewprojectdlg.cpp
@@ -106,10 +106,7 @@ void KNewProjectDlg::slotOK()
    m_option->m_filters = m_cbFilter->currentText();
    if(!m_leSearch->text().isEmpty())
      {
-       if(m_leReplace->text().isEmpty())
-         m_option->m_searchingOnlyMode = true;
-       else
-         m_option->m_searchingOnlyMode = false;
+       m_option->m_searchingOnlyMode = false;
      }
    m_option->m_quickSearchString = m_searchNowFlag + m_leSearch->text();
    m_option->m_quickReplaceString = m_searchNowFlag + m_leReplace->text();
