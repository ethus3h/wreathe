diff --git a/include/compiz-core.h b/include/compiz-core.h
index 7db648b..146c74e 100644
--- a/include/compiz-core.h
+++ b/include/compiz-core.h
@@ -1691,9 +1691,10 @@ disableTexture (CompScreen  *screen,
 #define COMP_SCREEN_OPTION_OVERLAPPING_OUTPUTS	  11
 #define COMP_SCREEN_OPTION_FOCUS_PREVENTION_LEVEL 12
 #define COMP_SCREEN_OPTION_FOCUS_PREVENTION_MATCH 13
-#define COMP_SCREEN_OPTION_TEXTURE_COMPRESSION	  14
-#define COMP_SCREEN_OPTION_FORCE_INDEPENDENT      15
-#define COMP_SCREEN_OPTION_NUM		          16
+#define COMP_SCREEN_OPTION_INVERTED_FOCUS_PREVENTION_LEVEL 14
+#define COMP_SCREEN_OPTION_TEXTURE_COMPRESSION	  15
+#define COMP_SCREEN_OPTION_FORCE_INDEPENDENT      16
+#define COMP_SCREEN_OPTION_NUM		          17
 
 #ifndef GLX_EXT_texture_from_pixmap
 #define GLX_BIND_TO_TEXTURE_RGB_EXT        0x20D0
diff --git a/metadata/core.xml.in.in b/metadata/core.xml.in.in
index 228fd25..2c7e0d8 100644
--- a/metadata/core.xml.in.in
+++ b/metadata/core.xml.in.in
@@ -315,6 +315,33 @@
 		    <_long>Windows to prevent grabbing keyboard focus</_long>
 		    <default>any</default>
 		</option>
+        <option name="inverted_focus_prevention_level" type="int">
+		    <_short>Non-matched Windows Focus-Stealing Prevention Level</_short>
+		    <_long>Level of focus stealing prevention for windows not matched by the focus stealing prevention match.</_long>
+		    <min>0</min>
+		    <max>4</max>
+		    <default>0</default>
+		    <desc>
+			<value>0</value>
+			<_name>Off</_name>
+		    </desc>
+		    <desc>
+			<value>1</value>
+			<_name>Low</_name>
+		    </desc>
+		    <desc>
+			<value>2</value>
+			<_name>Normal</_name>
+		    </desc>
+		    <desc>
+			<value>3</value>
+			<_name>High</_name>
+		    </desc>
+		    <desc>
+			<value>4</value>
+			<_name>Very High</_name>
+		    </desc>
+		</option>
 	    </group>
 	    <option name="unredirect_fullscreen_windows" type="bool">
 		<_short>Unredirect Fullscreen Windows</_short>
diff --git a/src/window.c b/src/window.c
index 47404a3..089fd25 100644
--- a/src/window.c
+++ b/src/window.c
@@ -5109,21 +5109,49 @@ isWindowFocusAllowed (CompWindow   *w,
     CompDisplay  *d = w->screen->display;
     CompScreen   *s = w->screen;
     CompWindow   *active;
-    Time	 aUserTime;
+    Time         aUserTime;
     CompMatch    *match;
-    int          level, vx, vy;
+    int          level, nonMatchedLevel, vx, vy;
+    Bool         matched, matchedNone, matchedNormal, matchedHigh,
+	matchedVeryHigh, nonMatchedNone, nonMatchedNormal, nonMatchedHigh,
+	nonMatchedVeryHigh;
 
     level = s->opt[COMP_SCREEN_OPTION_FOCUS_PREVENTION_LEVEL].value.i;
+    nonMatchedLevel =
+	s->opt[COMP_SCREEN_OPTION_INVERTED_FOCUS_PREVENTION_LEVEL].value.i;
 
-    if (level == FOCUS_PREVENTION_LEVEL_NONE)
-	return TRUE;
-
-    /* allow focus for excluded windows */
     match = &s->opt[COMP_SCREEN_OPTION_FOCUS_PREVENTION_MATCH].value.match;
-    if (!matchEval (match, w))
+    matched = matchEval (match, w);
+
+    /* These values indicate that the window was matched, and the
+	corresponding prevention level should apply to it. */
+    matchedNone = matched &&
+	level == FOCUS_PREVENTION_LEVEL_NONE;
+    matchedNormal = matched &&
+	level == FOCUS_PREVENTION_LEVEL_NORMAL;
+    matchedHigh = matched &&
+	level == FOCUS_PREVENTION_LEVEL_HIGH;
+    matchedVeryHigh = matched &&
+	level == FOCUS_PREVENTION_LEVEL_VERYHIGH;
+
+    /* These values indicate that the window wasn't matched, but
+	the corresponding prevention level should apply to it. */
+    nonMatchedNone = !matched &&
+	nonMatchedLevel == FOCUS_PREVENTION_LEVEL_NONE;
+    nonMatchedNormal = !matched &&
+	nonMatchedLevel == FOCUS_PREVENTION_LEVEL_NORMAL;
+    nonMatchedHigh = !matched &&
+	nonMatchedLevel == FOCUS_PREVENTION_LEVEL_HIGH;
+    nonMatchedVeryHigh = !matched &&
+	nonMatchedLevel == FOCUS_PREVENTION_LEVEL_VERYHIGH;
+
+    /* allow focus for excluded windows if nonMatchedLevel is none */
+    if (matchedNone || nonMatchedNone)
 	return TRUE;
 
-    if (level == FOCUS_PREVENTION_LEVEL_VERYHIGH)
+    if (matched || !nonMatchedNone)
+    {
+    if (matchedVeryHigh || nonMatchedVeryHigh)
 	return FALSE;
 
     active = findWindowAtDisplay (d, d->activeWindow);
@@ -5136,7 +5164,7 @@ isWindowFocusAllowed (CompWindow   *w,
     if (w->clientLeader == active->clientLeader)
 	return TRUE;
 
-    if (level == FOCUS_PREVENTION_LEVEL_HIGH)
+    if (matchedHigh || nonMatchedHigh)
 	return FALSE;
 
     /* not in current viewport or desktop */
@@ -5151,7 +5179,7 @@ isWindowFocusAllowed (CompWindow   *w,
     {
 	/* unsure as we have nothing to compare - allow focus in low level,
 	   don't allow in normal level */
-	if (level == FOCUS_PREVENTION_LEVEL_NORMAL)
+	if (matchedNormal || nonMatchedNormal)
 	    return FALSE;
 
 	return TRUE;
